//
//  CalculateExchangeRateConfigurator.swift
//  Currencies
//
//  Created by Jakub Hutny on 14.12.2016.
//  Copyright (c) 2016 Jakub Hutny. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Connect View, Interactor, and Presenter

extension CalculateExchangeRateViewController: CalculateExchangeRatePresenterOutput
{
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    router.passDataToNextScene(segue: segue)
  }
}

extension CalculateExchangeRateInteractor: CalculateExchangeRateViewControllerOutput
{
    func fetchCurrencies() {
        
    }
    
    func getInputLabelName() {
        
    }
}

extension CalculateExchangeRatePresenter: CalculateExchangeRateInteractorOutput
{
    // to be updated
    func presentGetInputLabelName() {
        
    }

}

class CalculateExchangeRateConfigurator
{
  // MARK: - Object lifecycle
  
  static let sharedInstance = CalculateExchangeRateConfigurator()
  
  private init() {}
  
  // MARK: - Configuration
  
  func configure(viewController: CalculateExchangeRateViewController)
  {
    let router = CalculateExchangeRateRouter()
    router.viewController = viewController
    
    let presenter = CalculateExchangeRatePresenter()
    presenter.output = viewController
    
    let interactor = CalculateExchangeRateInteractor()
    interactor.output = presenter
    
    viewController.output = interactor
    viewController.router = router
  }
}
